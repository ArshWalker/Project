{"version":3,"sources":["app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["emails","SimpleDialog","props","onClose","selectedValue","other","handleListItemClick","value","Dialog","id","List","map","email","ListItem","button","onClick","ListItemAvatar","Avatar","sx","backgroundColor","blue","color","ListItemText","primary","SimpleDialogDemo","React","useState","open","setOpen","setSelectedValue","Typography","variant","Button","AlertDialog","handleClose","DialogContent","DialogContentText","DialogActions","autoFocus","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","label","type","fullWidth","DialogTitleRoot","styled","MuiDialogTitle","theme","padding","spacing","position","right","top","palette","grey","DialogTitle","children","disableTypography","IconButton","className","MuiDialogContent","MuiDialogActions","CustomizedDialogs","state","handleClickOpen","setState","this","dividers","gutterBottom","Component","FullScreenDialog","useTheme","fullScreen","AppBar","Toolbar","edge","flex","marginLeft","secondary","Divider","DialogRoot","display","flexDirection","width","marginTop","minWidth","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableEscapeKeyDown","TransitionProps","onEntering","current","focus","RadioGroup","newValue","option","Radio","background","paper","maxHeight","ConfirmationDialog","component","role","divider","disabled","Container","marginBottom","AppDialog","routeSegments","path","title","Box","py","CustomizedDialog"],"mappings":"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","file":"static/js/25.0f5053e5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@mui/material/Button'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport Typography from '@mui/material/Typography'\r\nimport { blue } from '@mui/material/colors'\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com']\r\n\r\nfunction SimpleDialog(props) {\r\n    const { onClose, selectedValue, ...other } = props\r\n\r\n    function handleClose() {\r\n        onClose(selectedValue)\r\n    }\r\n    function handleListItemClick(value) {\r\n        onClose(value)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"simple-dialog-title\">\r\n                Set backup account\r\n            </DialogTitle>\r\n            <List>\r\n                {emails.map((email) => (\r\n                    <ListItem\r\n                        button\r\n                        onClick={() => handleListItemClick(email)}\r\n                        key={email}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar\r\n                                sx={{\r\n                                    backgroundColor: blue[100],\r\n                                    color: blue[600],\r\n                                }}\r\n                            >\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={email} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem\r\n                    button\r\n                    onClick={() => handleListItemClick('addAccount')}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <AddIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"add account\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func,\r\n    open: PropTypes.bool,\r\n    selectedValue: PropTypes.string,\r\n}\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1])\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false)\r\n        setSelectedValue(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle1\">\r\n                Selected: {selectedValue}\r\n            </Typography>\r\n            <br />\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\n\r\nexport default function AlertDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport Slide from '@mui/material/Slide'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function AlertDialogSlide() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Slide in alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open form dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email\r\n                        address here. We will send updates occasionally.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport Button from '@mui/material/Button'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport MuiDialogTitle from '@mui/material/DialogTitle'\r\nimport MuiDialogContent from '@mui/material/DialogContent'\r\nimport MuiDialogActions from '@mui/material/DialogActions'\r\n\r\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    '& .closeButton': {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n}))\r\n\r\nconst DialogTitle = ((props) => {\r\n    const { children, onClose } = props\r\n    return (\r\n        <DialogTitleRoot disableTypography>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"Close\"\r\n                    className='closeButton'\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitleRoot>\r\n    )\r\n})\r\n\r\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\r\n    \"&.root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\r\n    '&.root': {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nclass CustomizedDialogs extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={this.handleClickOpen}\r\n                >\r\n                    Open dialog\r\n                </Button>\r\n                <Dialog\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        Modal title\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Typography gutterBottom>\r\n                            Cras mattis consectetur purus sit amet fermentum.\r\n                            Cras justo odio, dapibus ac facilisis in, egestas\r\n                            eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                            vestibulum at eros.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Praesent commodo cursus magna, vel scelerisque nisl\r\n                            consectetur et. Vivamus sagittis lacus vel augue\r\n                            laoreet rutrum faucibus dolor auctor.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Aenean lacinia bibendum nulla sed consectetur.\r\n                            Praesent commodo cursus magna, vel scelerisque nisl\r\n                            consectetur et. Donec sed odio dui. Donec\r\n                            ullamcorper nulla non metus auctor fringilla.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Save changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomizedDialogs\r\n","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport List from '@mui/material/List'\r\nimport Divider from '@mui/material/Divider'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport Slide from '@mui/material/Slide'\r\nimport { H6 } from 'app/components/Typography'\r\nimport { useTheme } from '@mui/system'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function FullScreenDialog() {\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open full-screen dialog\r\n            </Button>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleClose}\r\n                            aria-label=\"Close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <H6\r\n                            sx={{\r\n                                flex: 1,\r\n                                marginLeft: theme.spacing(2),\r\n                            }}\r\n                        >\r\n                            Sound\r\n                        </H6>\r\n                        <Button color=\"inherit\" onClick={handleClose}>\r\n                            save\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Phone ringtone\"\r\n                            secondary=\"Titania\"\r\n                        />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Default notification ringtone\"\r\n                            secondary=\"Tethys\"\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport Button from '@mui/material/Button'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport Select from '@mui/material/Select'\r\nimport Switch from '@mui/material/Switch'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n    '& form': {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    '& .formControl': {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 120,\r\n    },\r\n    '& .formControlLabel': {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function MaxWidthDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [fullWidth, setFullWidth] = React.useState(true)\r\n    const [maxWidth, setMaxWidth] = React.useState('sm')\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n    function handleMaxWidthChange(event) {\r\n        setMaxWidth(event.target.value)\r\n    }\r\n    function handleFullWidthChange(event) {\r\n        setFullWidth(event.target.checked)\r\n    }\r\n\r\n    return (\r\n        <DialogRoot>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open max-width dialog\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                    Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        You can set my maximum width and whether to adapt or\r\n                        not.\r\n                    </DialogContentText>\r\n                    <form noValidate>\r\n                        <FormControl className='formControl'>\r\n                            <InputLabel htmlFor=\"max-width\">\r\n                                maxWidth\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={maxWidth}\r\n                                onChange={handleMaxWidthChange}\r\n                                inputProps={{\r\n                                    name: 'max-width',\r\n                                    id: 'max-width',\r\n                                }}\r\n                            >\r\n                                <MenuItem value={false}>false</MenuItem>\r\n                                <MenuItem value=\"xs\">xs</MenuItem>\r\n                                <MenuItem value=\"sm\">sm</MenuItem>\r\n                                <MenuItem value=\"md\">md</MenuItem>\r\n                                <MenuItem value=\"lg\">lg</MenuItem>\r\n                                <MenuItem value=\"xl\">xl</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            className='formControlLabel'\r\n                            control={\r\n                                <Switch\r\n                                    checked={fullWidth}\r\n                                    onChange={handleFullWidthChange}\r\n                                    value=\"fullWidth\"\r\n                                />\r\n                            }\r\n                            label=\"Full width\"\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </DialogRoot>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useTheme } from '@mui/system'\r\nimport Button from '@mui/material/Button'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport useMediaQuery from '@mui/material/useMediaQuery'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\n\r\nexport default function ResponsiveDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open responsive dialog\r\n            </Button>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@mui/material/Button'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport RadioGroup from '@mui/material/RadioGroup'\r\nimport Radio from '@mui/material/Radio'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport { styled } from '@mui/system'\r\n\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel',\r\n]\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n    const { onClose, value: valueProp, open, ...other } = props\r\n    const [value, setValue] = React.useState(valueProp)\r\n    const radioGroupRef = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp)\r\n        }\r\n    }, [valueProp, open])\r\n\r\n    function handleEntering() {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus()\r\n        }\r\n    }\r\n\r\n    function handleCancel() {\r\n        onClose()\r\n    }\r\n\r\n    function handleOk() {\r\n        onClose(value)\r\n    }\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"xs\"\r\n            disableEscapeKeyDown\r\n            TransitionProps={{onEntering: handleEntering}}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">\r\n                Phone Ringtone\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup\r\n                    ref={radioGroupRef}\r\n                    aria-label=\"Ringtone\"\r\n                    name=\"ringtone\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map((option) => (\r\n                        <FormControlLabel\r\n                            value={option}\r\n                            key={option}\r\n                            control={<Radio />}\r\n                            label={option}\r\n                        />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={handleCancel}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\">\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n}\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    '& .paper': {\r\n        width: '80%',\r\n        maxHeight: 435,\r\n    }\r\n}))\r\n\r\nexport default function ConfirmationDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [value, setValue] = React.useState('Dione')\r\n\r\n    function handleClickListItem() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(newValue) {\r\n        setOpen(false)\r\n\r\n        if (newValue) {\r\n            setValue(newValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DialogRoot>\r\n            <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"Phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                    role=\"listitem\"\r\n                >\r\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText\r\n                        primary=\"Default notification ringtone\"\r\n                        secondary=\"Tethys\"\r\n                    />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw\r\n                    keepMounted\r\n                    open={open}\r\n                    value={value}\r\n                    className=\"paper\"\r\n                    id=\"ringtone-menu\"\r\n                    onClose={handleClose}\r\n                />\r\n            </List>\r\n        </DialogRoot>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport SimpleDialogDemo from './SimpleDialog'\r\nimport AlertDialog from './SimpleAlerts'\r\nimport AlertDialogSlide from './DialogTransition'\r\nimport FormDialog from './FormDialog'\r\nimport CustomizedDialogs from './CustomizedDialog'\r\nimport FullScreenDialog from './FullScreenDialog'\r\nimport MaxWidthDialog from './OptimalSizeDialog'\r\nimport ResponsiveDialog from './ResponsiveDialog'\r\nimport ConfirmationDialog from './ConfirmationDialog'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppDialog = () => {\r\n    return (\r\n        <Container>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Dialog' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple Dialog\">\r\n                <SimpleDialogDemo />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"alert dialog\">\r\n                <AlertDialog />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"transition\">\r\n                <AlertDialogSlide />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"form dialog\">\r\n                <FormDialog />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"customized dialog\">\r\n                <CustomizedDialogs />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"full-screen dialog\">\r\n                <FullScreenDialog />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"optimized size dialog\">\r\n                <MaxWidthDialog />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"responsive dialog\">\r\n                <ResponsiveDialog />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"confirmation dialog\">\r\n                <ConfirmationDialog />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppDialog\r\n"],"sourceRoot":""}