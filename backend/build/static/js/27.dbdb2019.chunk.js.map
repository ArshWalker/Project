{"version":3,"sources":["app/views/material-kit/forms/SimpleVendForm.jsx","app/views/material-kit/tables/VendorTable.jsx","app/views/material-kit/forms/VendorForm.jsx"],"names":["TextField","styled","TextValidator","width","marginBottom","SimpleVendForm","useState","date","Date","state","setState","useEffect","ValidatorForm","addValidationRule","value","console","log","password","removeValidationRule","handleChange","event","persist","target","name","Name","gst","email","monumber","address","pan","bank","onSubmit","onError","Grid","container","spacing","item","lg","md","sm","xs","sx","mt","label","onChange","type","validators","errorMessages","FormControlLabel","control","Checkbox","mb","Button","color","variant","Icon","pl","textTransform","VendorTable","props","vend","fetch","then","response","json","data","this","refreshList","VendorId","window","confirm","method","header","Accept","ButtonToolbar","onClick","addModalShow","Table","striped","bordered","hover","style","marginLeft","marginTop","textAlign","map","ven","Address","GST","Email","Pan","Contact","Bank","className","deleteVen","Component","Container","theme","margin","breakpoints","down","VendorForm","title","Box","py"],"mappings":"uOAcMA,EAAYC,YAAOC,gBAAPD,EAAsB,iBAAO,CAC3CE,MAAO,OACPC,aAAc,WA8IHC,EA3IQ,WACnB,MAA0BC,mBAAS,CAC/BC,KAAM,IAAIC,OADd,mBAAOC,EAAP,KAAcC,EAAd,KAIAC,qBAAU,WASN,OARAC,gBAAcC,kBAAkB,mBAAmB,SAACC,GAGhD,OAFAC,QAAQC,IAAIF,GAERA,IAAUL,EAAMQ,YAKjB,kBAAML,gBAAcM,qBAAqB,sBACjD,CAACT,EAAMQ,WAEV,IAKME,EAAe,SAACC,GAClBA,EAAMC,UACNX,EAAS,2BACFD,GADC,kBAEHW,EAAME,OAAOC,KAAOH,EAAME,OAAOR,UAIlCU,EAAmDf,EAAnDe,KAAMC,EAA6ChB,EAA7CgB,IAAKC,EAAwCjB,EAAxCiB,MAAOC,EAAiClB,EAAjCkB,SAAUC,EAAuBnB,EAAvBmB,QAASC,EAAcpB,EAAdoB,IAAKC,EAASrB,EAATqB,KAGlD,OACI,8BACI,eAAC,gBAAD,CAAeC,SAlBF,SAACX,KAkByBY,QAAS,kBAAM,MAAtD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,CAAEC,GAAI,GAAnD,UAYI,cAAC1C,EAAD,CACI2C,MAAM,OACNC,SAAUzB,EACV0B,KAAK,OACLtB,KAAK,OACLT,MAAOU,GAAQ,GACfsB,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,cAAC/C,EAAD,CACI2C,MAAM,SACNC,SAAUzB,EACV0B,KAAK,OACLtB,KAAK,MACLT,MAAOW,GAAO,KAElB,cAACzB,EAAD,CACI2C,MAAM,UACNC,SAAUzB,EACV0B,KAAK,OACLtB,KAAK,MACLT,MAAOe,GAAO,GACdiB,WAAY,CAAC,YACbC,cAAe,CAAC,4BAGpB,cAACC,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,sDAId,eAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,CAAEC,GAAI,GAAnD,UACI,cAAC1C,EAAD,CACI2C,MAAM,UACNC,SAAUzB,EACV0B,KAAK,OACLtB,KAAK,UACLT,MAAOc,GAAW,GAClBkB,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,cAAC/C,EAAD,CACI2C,MAAM,QACNC,SAAUzB,EACV0B,KAAK,QACLtB,KAAK,QACLT,MAAOY,GAAS,GAChBoB,WAAY,CAAC,WAAY,WACzBC,cAAe,CACX,yBACA,wBAGR,cAAC/C,EAAD,CACIyC,GAAI,CAAEU,GAAI,GACVR,MAAM,iBACNC,SAAUzB,EACV0B,KAAK,SACLtB,KAAK,WACLT,MAAOa,GAAY,GACnBmB,WAAY,CACR,WACA,qBACA,uBAEJC,cAAe,CAAC,4BAEpB,cAAC/C,EAAD,CACI2C,MAAM,sBACNC,SAAUzB,EACV0B,KAAK,SACLtB,KAAK,OACLT,MAAOgB,GAAQ,GACfgB,WAAY,CAAC,YACbC,cAAe,CAAC,kCAI5B,eAACK,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYT,KAAK,SAAjD,UACI,cAACU,EAAA,EAAD,kBACA,cAAC,IAAD,CAAMd,GAAI,CAAEe,GAAI,EAAGC,cAAe,cAAlC,mC,2DChJPC,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDlD,MAAQ,CACTmD,KAAM,IAHK,EADvB,+CASI,WAAe,IAAD,OACVC,MAAM,iCACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,EAAKvD,SAAS,CAAEkD,KAAMK,SAbtC,+BAiBI,WACIC,KAAKC,gBAlBb,uBAqBI,SAAUC,GACFC,OAAOC,QAAQ,kBACfT,MAAM,gCAAkCO,EAAU,CAC9CG,OAAQ,SACRC,OAAQ,CACJC,OAAQ,mBACR,eAAgB,wBA3BpC,oBAgCI,WAAU,IAAD,OACGb,EAASM,KAAKzD,MAAdmD,KAER,OACI,gCACI,cAACc,EAAA,EAAD,UACI,cAAC,IAAD,CACIpB,QAAQ,UACRqB,QAAS,kBAAM,EAAKjE,SAAS,CAAEkE,cAAc,KAFjD,4BAUJ,eAACC,EAAA,EAAD,CACIvB,QAAQ,OACRwB,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,MAAO,CAEHC,WAAY,OACZC,UAAW,OACXhF,MAAO,OATf,UAYI,gCACI,qBAAI8E,MAAO,CAAEG,UAAW,UAAxB,UACI,0CACA,sCACA,yCACA,yCACA,uCACA,yCACA,yCACA,6CACA,8CAGR,gCACKxB,EAAKyB,KAAI,SAACC,GAAD,OACN,+BACI,6BAAKA,EAAIlB,WACT,6BAAKkB,EAAI9D,OACT,6BAAK8D,EAAIC,UACT,6BAAKD,EAAIE,MACT,6BAAKF,EAAIG,QACT,6BAAKH,EAAII,MACT,6BAAKJ,EAAIK,UACT,6BAAKL,EAAIM,OACT,6BACI,eAAClB,EAAA,EAAD,WACI,cAAC,IAAD,CACImB,UAAU,OACVvC,QAAQ,OAFZ,kBAiBA,cAAC,IAAD,CACIuC,UAAU,OACVvC,QAAQ,SACRqB,QAAS,kBACL,EAAKmB,UAAUlC,EAAKQ,WAJ5B,2BA5BHkB,EAAIlB,yBA3EzC,GAAiC2B,a,iBCI3BC,EAAY/F,YAAO,MAAPA,EAAc,kBAAGgG,EAAH,EAAGA,MAAH,UAC5BC,OAAQ,QADoB,cAE3BD,EAAME,YAAYC,KAAK,MAAQ,CAC5BF,OAAQ,SAHgB,cAK5B,gBAL4B,aAMxB9F,aAAc,QACb6F,EAAME,YAAYC,KAAK,MAAQ,CAC5BhG,aAAc,UARM,KAqDjBiG,UAxCI,WACf,OACI,eAACL,EAAD,WA2BI,cAAC,IAAD,CAAYM,MAAM,gBAAlB,SACI,cAAC,EAAD,MAEJ,cAACC,EAAA,EAAD,CAAKC,GAAG,SACR,cAAC,IAAD,CAAYF,MAAM,kBAAlB,SACI,cAAC,EAAD","file":"static/js/27.dbdb2019.chunk.js","sourcesContent":["import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    // InputAdornment,\r\n    // IconButton,\r\n} from '@mui/material'\r\nimport { styled } from '@mui/system'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n    width: '100%',\r\n    marginBottom: '16px',\r\n}))\r\n\r\nconst SimpleVendForm = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // console.log(event);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const { Name, gst, email, monumber, address, pan, bank } = state\r\n\r\n    // const handleFileUpload = () => {}\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                        {/* <TextField\r\n                            label=\"Add a Customer\"\r\n                            onChange={handleChange}\r\n                            name=\"Name\"\r\n                            type=\"file\"\r\n                            style={{}}\r\n                            value={Name || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        /> */}\r\n\r\n                        <TextField\r\n                            label=\"Name\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"Name\"\r\n                            value={Name || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextField\r\n                            label=\"GST No\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"gst\"\r\n                            value={gst || ''}\r\n                        />\r\n                        <TextField\r\n                            label=\"PAN No.\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"pan\"\r\n                            value={pan || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            control={<Checkbox />}\r\n                            label=\"I have read and agree to the terms of service.\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                        <TextField\r\n                            label=\"Address\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            value={address || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email || ''}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={[\r\n                                'this field is required',\r\n                                'email is not valid',\r\n                            ]}\r\n                        />\r\n                        <TextField\r\n                            sx={{ mb: 2 }}\r\n                            label=\"Contact Number\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"monumber\"\r\n                            value={monumber || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength:16',\r\n                                'maxStringLength: 16',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextField\r\n                            label=\"Bank Account Number\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"bank\"\r\n                            value={bank || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>add</Icon>\r\n                    <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                        Add Customer\r\n                    </Span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleVendForm\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n// import { SimpleForm } from './../forms/SimpleForm';\r\n\r\nexport class VendorTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            vend: [],\r\n            // addModalShow:false\r\n        }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch('http://localhost:8000/vendor/')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ vend: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n\r\n    deleteVen(VendorId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch('http://localhost:8000/vendor/' + VendorId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { vend } = this.state\r\n        //let addModalClose=()=>this.setState({addModalShow:false});\r\n        return (\r\n            <div>\r\n                <ButtonToolbar>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >\r\n                        Add Customer\r\n                    </Button>\r\n\r\n                    {/* <SimpleForm show={this.state.addModalShow}\r\n                    onHide={addModalClose}/> */}\r\n                </ButtonToolbar>\r\n                <Table\r\n                    variant=\"dark\"\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    style={{\r\n                        // position: 'absolute',\r\n                        marginLeft: '30px',\r\n                        marginTop: '30px',\r\n                        width: '95%',\r\n                    }}\r\n                >\r\n                    <thead>\r\n                        <tr style={{ textAlign: 'center' }}>\r\n                            <th>VendorId</th>\r\n                            <th>Name</th>\r\n                            <th>Address</th>\r\n                            <th>GST No.</th>\r\n                            <th>Email</th>\r\n                            <th>PAN No.</th>\r\n                            <th>Contact</th>\r\n                            <th>Account No.</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {vend.map((ven) => (\r\n                            <tr key={ven.VendorId}>\r\n                                <td>{ven.VendorId}</td>\r\n                                <td>{ven.Name}</td>\r\n                                <td>{ven.Address}</td>\r\n                                <td>{ven.GST}</td>\r\n                                <td>{ven.Email}</td>\r\n                                <td>{ven.Pan}</td>\r\n                                <td>{ven.Contact}</td>\r\n                                <td>{ven.Bank}</td>\r\n                                <td>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            // onClick={() =>\r\n                                            //     this.setState({\r\n                                            //         editModalShow: true,\r\n                                            //         empid: emp.EmployeeId,\r\n                                            //         empname: emp.EmployeeName,\r\n                                            //         depmt: emp.Department,\r\n                                            //         photofilename:\r\n                                            //             emp.PhotoFileName,\r\n                                            //         doj: emp.DateOfJoining,\r\n                                            //     })\r\n                                            // }\r\n                                        >\r\n                                            Edit\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteVen(vend.VendorId)\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                    </ButtonToolbar>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport SimpleVendForm from './SimpleVendForm'\r\nimport { VendorTable } from './../tables/VendorTable'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst VendorForm = () => {\r\n    return (\r\n        <Container>\r\n            {/* <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Form' },\r\n                    ]}\r\n                />\r\n            </div> */}\r\n            {/* <SimpleCard>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                        borderRadius: '15px',\r\n                        position: 'relative',\r\n                        left: '980px',\r\n                    }}\r\n                >\r\n                    <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Create a Invoice\r\n                        </Span>\r\n                </Button>\r\n            </SimpleCard>\r\n            <Box py=\"12px\" /> */}\r\n            <SimpleCard title=\"Create Vendor\">\r\n                <SimpleVendForm />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Vendors\">\r\n                <VendorTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default VendorForm\r\n"],"sourceRoot":""}