{"version":3,"sources":["app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/forms/SimpleCustForm.jsx","app/views/material-kit/forms/CustomerForm.jsx"],"names":["StyledTable","styled","Table","theme","whiteSpace","paddingLeft","paddingRight","textTransform","subscribarList","Image","Username","Name","Email","Contact","Address","SimpleTable","width","overflow","map","subscriber","index","align","color","TextField","TextValidator","marginBottom","SimpleCustForm","useState","date","Date","state","setState","useEffect","ValidatorForm","addValidationRule","value","console","log","password","removeValidationRule","handleChange","event","persist","target","name","username","email","monumber","address","onSubmit","onError","Grid","container","spacing","item","lg","md","sm","xs","sx","mt","htmlFor","style","display","id","type","Fab","size","component","variant","marginTop","marginLeft","onChange","validators","label","errorMessages","FormControlLabel","control","Checkbox","mb","Button","Icon","pl","Container","margin","breakpoints","down","CustomerForm","title","Box","py"],"mappings":"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","file":"static/js/19.d501e9bc.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    IconButton,\r\n    Icon,\r\n    TableRow,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst subscribarList = [\r\n    {\r\n        Image: 'Hello',\r\n        Username: 'Shai05',\r\n        Name: 'Shaishav',\r\n        Email: 'abc@gmail.com',\r\n        Contact: '99992386342',\r\n        Address: '13123 Gurgaon',\r\n    },\r\n]\r\n\r\nconst SimpleTable = () => {\r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Image</TableCell>\r\n                        <TableCell>Username</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Contact</TableCell>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {subscribarList.map((subscriber, index) => (\r\n                        <TableRow key={index}>\r\n                            <TableCell align=\"left\">\r\n                                {subscriber.Image}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                                {subscriber.Username}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                                {subscriber.Name}\r\n                            </TableCell>\r\n                            <TableCell>{subscriber.Email}</TableCell>\r\n                            <TableCell>{subscriber.Contact}</TableCell>\r\n                            <TableCell>{subscriber.Address}</TableCell>\r\n                            <TableCell>\r\n                                <IconButton>\r\n                                    <Icon color=\"error\">close</Icon>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </StyledTable>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SimpleTable\r\n","import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    // InputAdornment,\r\n    // IconButton,\r\n    Fab,\r\n} from '@mui/material'\r\nimport { styled } from '@mui/system'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined'\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n    width: '100%',\r\n    marginBottom: '16px',\r\n}))\r\n\r\nconst SimpleCustForm = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // console.log(event);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const { Name, username, email, monumber, address } = state\r\n\r\n    // const handleFileUpload = () => {}\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                        {/* <TextField\r\n                            label=\"Add a Customer\"\r\n                            onChange={handleChange}\r\n                            name=\"Name\"\r\n                            type=\"file\"\r\n                            style={{}}\r\n                            value={Name || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        /> */}\r\n                        <label htmlFor=\"upload-photo\">\r\n                            <input\r\n                                style={{ display: 'none' }}\r\n                                id=\"upload-photo\"\r\n                                name=\"upload-photo\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                            <Fab\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                component=\"span\"\r\n                                aria-label=\"add\"\r\n                                variant=\"extended\"\r\n                                style={{\r\n                                    marginTop: '30px',\r\n                                    marginLeft: '140px',\r\n                                    marginBottom: '70px',\r\n                                }}\r\n                            >\r\n                                <PersonAddOutlinedIcon /> Upload photo\r\n                            </Fab>\r\n                        </label>\r\n\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            id=\"standard-basic\"\r\n                            onChange={handleChange}\r\n                            value={username || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength: 4',\r\n                                'maxStringLength: 9',\r\n                            ]}\r\n                            label=\"Username (Min length 4, Max length 9)\"\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox />}\r\n                            label=\"I have read and agree to the terms of service.\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                        <TextField\r\n                            label=\"Name\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"Name\"\r\n                            value={Name || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email || ''}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={[\r\n                                'this field is required',\r\n                                'email is not valid',\r\n                            ]}\r\n                        />\r\n                        <TextField\r\n                            sx={{ mb: 2 }}\r\n                            label=\"Contact Number\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"monumber\"\r\n                            value={monumber || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength:16',\r\n                                'maxStringLength: 16',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextField\r\n                            label=\"Address\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            value={address || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>add</Icon>\r\n                    <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                        Add Customer\r\n                    </Span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleCustForm\r\n","import React from 'react'\r\nimport SimpleCustForm from './SimpleCustForm'\r\nimport SimpleTable from './../tables/SimpleTable'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst CustomerForm = () => {\r\n    return (\r\n        <Container>\r\n            {/* <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Form' },\r\n                    ]}\r\n                />\r\n            </div> */}\r\n            {/* <SimpleCard>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                        borderRadius: '15px',\r\n                        position: 'relative',\r\n                        left: '980px',\r\n                    }}\r\n                >\r\n                    <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Create a Invoice\r\n                        </Span>\r\n                </Button>\r\n            </SimpleCard>\r\n            <Box py=\"12px\" /> */}\r\n            <SimpleCard title=\"Create Customer\">\r\n                <SimpleCustForm />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Customers\">\r\n                <SimpleTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CustomerForm\r\n"],"sourceRoot":""}