{"version":3,"sources":["../node_modules/react-bootstrap/esm/Image.js","app/views/material-kit/forms/SimpleForm.jsx","app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/forms/AppForm.jsx"],"names":["Image","PropTypes","string","bool","React","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","SimpleForm","photoname","imagesrc","handleSubmit","bind","handleFileSelected","event","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","InvoiceId","Name","target","value","Invoice_no","Invoice_Date","Payment_Date","Amount","Photo","this","then","res","json","result","alert","error","files","name","formData","FormData","append","Modal","size","centered","Header","clooseButton","Title","id","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","style","width","marginRight","borderRadius","type","required","placeholder","Button","variant","marginTop","height","src","onChange","Footer","onClick","onHide","Component","PaginationTable","state","emps","addModalShow","response","data","setState","refreshList","window","confirm","header","backgroundColor","ButtonToolbar","show","Table","striped","bordered","hover","marginLeft","textAlign","map","emp","deleteEmp","Container","styled","theme","margin","breakpoints","down","marginBottom","AppForm"],"mappings":"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","file":"static/js/18.797156d1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap'\r\n\r\nexport class SimpleForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFileSelected = this.handleFileSelected.bind(this)\r\n    }\r\n\r\n    photoname = 'anonymous.png'\r\n    imagesrc = 'http://localhost:8000/media/' + this.photoname\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch('http://localhost:8000/invoice/', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                InvoiceId: null,\r\n                Name: event.target.Name.value,\r\n                Invoice_no: event.target.Invoice_no.value,\r\n                Invoice_Date: event.target.Invoice_Date.value,\r\n                Payment_Date: event.target.Payment_Date.value,\r\n                Amount: event.target.Amount.value,\r\n                Photo: this.photoname,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    alert(result)\r\n                },\r\n                (error) => {\r\n                    alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    handleFileSelected(event) {\r\n        event.preventDefault()\r\n        this.photoname = event.target.files[0].name\r\n        const formData = new FormData()\r\n        formData.append(\r\n            'myFile',\r\n            event.target.files[0],\r\n            event.target.files[0].name\r\n        )\r\n\r\n        fetch('http://localhost:8000/invoice/SaveFile/', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.imagesrc = 'http://localhost:8000/media/' + result\r\n                },\r\n                (error) => {\r\n                    alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Invoice\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"Name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            style={{\r\n                                                width: '190px',\r\n                                                marginRight: '20px',\r\n                                                borderRadius: '15px',\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            name=\"Name\"\r\n                                            required\r\n                                            placeholder=\"Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Invoice_no\">\r\n                                        <Form.Label>Invoice_no</Form.Label>\r\n                                        <Form.Control\r\n                                            style={{\r\n                                                width: '190px',\r\n                                                marginRight: '20px',\r\n                                                borderRadius: '15px',\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            name=\"Invoice_no\"\r\n                                            required\r\n                                            placeholder=\"Invoice_no\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Invoice_Data\">\r\n                                        <Form.Label>Invoice_Data</Form.Label>\r\n                                        <Form.Control\r\n                                            style={{\r\n                                                width: '190px',\r\n                                                marginRight: '20px',\r\n                                                borderRadius: '15px',\r\n                                            }}\r\n                                            type=\"date\"\r\n                                            name=\"Invoice_Data\"\r\n                                            required\r\n                                            placeholder=\"Invoice_Data\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Payment_Data\">\r\n                                        <Form.Label>Payment_Data</Form.Label>\r\n                                        <Form.Control\r\n                                            style={{\r\n                                                width: '190px',\r\n                                                marginRight: '20px',\r\n                                                borderRadius: '15px',\r\n                                            }}\r\n                                            type=\"date\"\r\n                                            name=\"Payment_Data\"\r\n                                            required\r\n                                            placeholder=\"Payment_Data\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Amount\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control\r\n                                            style={{\r\n                                                width: '190px',\r\n                                                marginRight: '20px',\r\n                                                borderRadius: '15px',\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            name=\"Amount\"\r\n                                            required\r\n                                            placeholder=\"Amount\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n                                            Add Invoices\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n\r\n                            <Col sm={6}>\r\n                                <Image\r\n                                    width=\"200px\"\r\n                                    height=\"200px\"\r\n                                    src={this.imagesrc}\r\n                                />\r\n                                <input\r\n                                    onChange={this.handleFileSelected}\r\n                                    type=\"File\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\nimport { SimpleForm } from './../forms/SimpleForm';\r\n\r\nexport class PaginationTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { emps: [], addModalShow:false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch('http://localhost:8000/invoice/')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ emps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n\r\n\r\n\r\n    deleteEmp(InvoiceId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch('http://localhost:8000/invoice/' + InvoiceId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { emps } =\r\n            this.state\r\n        let addModalClose=()=>this.setState({addModalShow:false});\r\n        return (\r\n            <div style={{ backgroundColor: '#B4CFB0', height: '100vh' }}>\r\n                <ButtonToolbar>\r\n                    <Button variant='primary'\r\n                    onClick={()=>this.setState({addModalShow:true})}>\r\n                    Add Invoice</Button>\r\n\r\n                    <SimpleForm show={this.state.addModalShow}\r\n                    onHide={addModalClose}/>\r\n                </ButtonToolbar>\r\n                <Table\r\n                    variant=\"dark\"\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    style={{\r\n                        // position: 'absolute',\r\n                        marginLeft: '30px',\r\n                        marginTop: '30px',\r\n                        width: '95%',\r\n                    }}\r\n                >\r\n                    <thead>\r\n                        <tr style={{ textAlign: 'center' }}>\r\n                            <th>InvoiceId</th>\r\n                            <th>Name</th>\r\n                            <th>Invoice_No</th>\r\n                            <th>Invoice Date</th>\r\n                            <th>Payment Date</th>\r\n                            <th>Amount Date</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {emps.map((emp) => (\r\n                            <tr key={emp.InvoiceId}>\r\n                                <td>{emp.InvoiceId}</td>\r\n                                <td>{emp.Name}</td>\r\n                                <td>{emp.Invoice_no}</td>\r\n                                <td>{emp.Invoice_Date}</td>\r\n                                <td>{emp.Payment_Date}</td>\r\n                                <td>{emp.Amount}</td>\r\n                                <td>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteEmp(emp.InvoiceId)\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n\r\n                                    </ButtonToolbar>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n// import StepperForm from './StepperForm'\r\nimport { PaginationTable } from './../tables/PaginationTable'\r\nimport { SimpleCard } from 'app/components'\r\nimport { styled } from '@mui/system'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppForm = () => {\r\n    return (\r\n        <Container>\r\n            {/* <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Form' },\r\n                    ]}\r\n                />\r\n            </div> */}\r\n            {/* <SimpleCard>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                        borderRadius: '15px',\r\n                        position: 'relative',\r\n                        left: '980px',\r\n                    }}\r\n                >\r\n                    <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Create a Invoice\r\n                        </Span>\r\n                </Button>\r\n            </SimpleCard>\r\n            <Box py=\"12px\" /> */}\r\n            <SimpleCard>\r\n                <PaginationTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppForm\r\n"],"sourceRoot":""}