{"version":3,"sources":["../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/InputBase/utils.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/icons-material/FavoriteBorder.js","../node_modules/@mui/icons-material/Favorite.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/CheckBox.js","app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["useFormControl","React","FormControlContext","formControlState","props","states","muiFormControl","reduce","acc","state","hasValue","value","Array","isArray","length","isFilled","obj","SSR","defaultValue","isAdornedStart","startAdornment","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","styles","ownerState","root","row","_extends","display","flexDirection","flexWrap","FormGroup","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","color","capitalize","theme","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","composedClasses","type","fontSize","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","SimpleCheckbox","useState","checkedA","checkedB","checkedF","setState","handleChange","event","target","onChange","defaultChecked","GreenCheckbox","green","LabelledCheckbox","checkedG","FormControlLabel","control","label","PlacingCheckboxLabel","setValue","FormControl","component","FormLabel","labelPlacement","AppButtonRoot","margin","spacing","FormGroupCheckbox","gilad","jason","antoine","error","filter","v","FormHelperText","required","Container","breakpoints","down","marginBottom","AppCheckbox","routeSegments","path","title","Box","py"],"mappings":"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","file":"static/js/15.c02da793.chunk.js","sourcesContent":["import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport default FormControlContext;","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    row\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import React from 'react'\r\nimport { Checkbox } from '@mui/material'\r\n\r\nexport default function SimpleCheckbox() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                checked={state.checkedA}\r\n                onChange={handleChange('checkedA')}\r\n                value=\"checkedA\"\r\n                inputProps={{\r\n                    'aria-label': 'primary checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                checked={state.checkedB}\r\n                onChange={handleChange('checkedB')}\r\n                value=\"checkedB\"\r\n                color=\"primary\"\r\n                inputProps={{\r\n                    'aria-label': 'secondary checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                value=\"checkedC\"\r\n                inputProps={{\r\n                    'aria-label': 'uncontrolled-checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                disabled\r\n                value=\"checkedD\"\r\n                inputProps={{\r\n                    'aria-label': 'disabled checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                disabled\r\n                checked\r\n                value=\"checkedE\"\r\n                inputProps={{\r\n                    'aria-label': 'disabled checked checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                checked={state.checkedF}\r\n                onChange={handleChange('checkedF')}\r\n                value=\"checkedF\"\r\n                indeterminate\r\n                inputProps={{\r\n                    'aria-label': 'indeterminate checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                defaultChecked\r\n                color=\"default\"\r\n                value=\"checkedG\"\r\n                inputProps={{\r\n                    'aria-label': 'checkbox with default color',\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled } from '@mui/material'\r\nimport { green } from '@mui/material/colors'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport FormGroup from '@mui/material/FormGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Favorite from '@mui/icons-material/Favorite'\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder'\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\r\n\r\nconst GreenCheckbox = styled(Checkbox)(() => ({\r\n    color: green[400],\r\n    '&$checked': {\r\n        color: green[600],\r\n    },\r\n}))\r\n\r\nexport default function LabelledCheckbox() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedA}\r\n                        onChange={handleChange('checkedA')}\r\n                        value=\"checkedA\"\r\n                    />\r\n                }\r\n                label=\"Secondary\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedB}\r\n                        onChange={handleChange('checkedB')}\r\n                        value=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Primary\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Checkbox value=\"checkedC\" />}\r\n                label=\"Uncontrolled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Checkbox value=\"checkedD\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Checkbox checked value=\"checkedE\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedF}\r\n                        onChange={handleChange('checkedF')}\r\n                        value=\"checkedF\"\r\n                        indeterminate\r\n                    />\r\n                }\r\n                label=\"Indeterminate\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <GreenCheckbox\r\n                        color=\"default\"\r\n                        checked={state.checkedG}\r\n                        onChange={handleChange('checkedG')}\r\n                        value=\"checkedG\"\r\n                    />\r\n                }\r\n                label=\"Custom color\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<FavoriteBorder />}\r\n                        checkedIcon={<Favorite />}\r\n                        value=\"checkedH\"\r\n                    />\r\n                }\r\n                label=\"Custom icon\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                        value=\"checkedI\"\r\n                    />\r\n                }\r\n                label=\"Custom size\"\r\n            />\r\n        </FormGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport FormGroup from '@mui/material/FormGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport FormLabel from '@mui/material/FormLabel'\r\n\r\nfunction PlacingCheckboxLabel() {\r\n    const [value, setValue] = React.useState('female')\r\n\r\n    function handleChange(event) {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n            <FormGroup\r\n                aria-label=\"position\"\r\n                name=\"position\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                row\r\n            >\r\n                <FormControlLabel\r\n                    value=\"top\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Top\"\r\n                    labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"start\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Start\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"bottom\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Bottom\"\r\n                    labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"End\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default PlacingCheckboxLabel\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport {\r\n    Checkbox,\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    FormHelperText,\r\n    FormControlLabel\r\n} from '@mui/material'\r\n\r\nconst AppButtonRoot = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    '& .formControl': {\r\n        margin: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nexport default function FormGroupCheckbox() {\r\n    const [state, setState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: false,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    const { gilad, jason, antoine } = state\r\n    const error = [gilad, jason, antoine].filter((v) => v).length !== 2\r\n\r\n    return (\r\n        <AppButtonRoot>\r\n            <FormControl component=\"fieldset\" className='formControl'>\r\n                <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={gilad}\r\n                                onChange={handleChange('gilad')}\r\n                                value=\"gilad\"\r\n                            />\r\n                        }\r\n                        label=\"Gilad Gray\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={jason}\r\n                                onChange={handleChange('jason')}\r\n                                value=\"jason\"\r\n                            />\r\n                        }\r\n                        label=\"Jason Killian\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={antoine}\r\n                                onChange={handleChange('antoine')}\r\n                                value=\"antoine\"\r\n                            />\r\n                        }\r\n                        label=\"Antoine Llorca\"\r\n                    />\r\n                </FormGroup>\r\n                <FormHelperText>Be careful</FormHelperText>\r\n            </FormControl>\r\n            <FormControl\r\n                required\r\n                error={error}\r\n                component=\"fieldset\"\r\n                className='formControl'\r\n            >\r\n                <FormLabel component=\"legend\">Pick two</FormLabel>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={gilad}\r\n                                onChange={handleChange('gilad')}\r\n                                value=\"gilad\"\r\n                            />\r\n                        }\r\n                        label=\"Gilad Gray\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={jason}\r\n                                onChange={handleChange('jason')}\r\n                                value=\"jason\"\r\n                            />\r\n                        }\r\n                        label=\"Jason Killian\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={antoine}\r\n                                onChange={handleChange('antoine')}\r\n                                value=\"antoine\"\r\n                            />\r\n                        }\r\n                        label=\"Antoine Llorca\"\r\n                    />\r\n                </FormGroup>\r\n                <FormHelperText>You can display an error</FormHelperText>\r\n            </FormControl>\r\n        </AppButtonRoot>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport SimpleCheckbox from './SimpleCheckbox'\r\nimport LabelledCheckbox from './LabelledCheckbox'\r\nimport PlacingCheckboxLabel from './PlacingCheckboxLabel'\r\nimport FormGroupCheckbox from './FormGroupCheckbox'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppCheckbox = () => {\r\n    return (\r\n        <Container>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Chckbox' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple checkbox\">\r\n                <SimpleCheckbox />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Checkbox with Label\">\r\n                <LabelledCheckbox />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Checkbox with Form Group\">\r\n                <FormGroupCheckbox />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Checkbox with Different Label Placement\">\r\n                <PlacingCheckboxLabel />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppCheckbox\r\n"],"sourceRoot":""}