{"version":3,"sources":["app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"names":["SimpleSnackbar","theme","useTheme","React","useState","open","setOpen","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","color","size","IconButton","sx","padding","spacing","ContentRoot","styled","backgroundColor","green","palette","error","main","primary","amber","fontSize","opacity","marginRight","display","alignItems","margin","CustomizedSnackbars","variant","className","Alert","severity","width","m","PositionedSnackbar","state","setState","handleClick","newState","SnackbarRoot","maxWidth","LongTextSnackbar","SnackbarContent","StyledIconButton","ConsecutiveSnackbars","queue","push","key","Date","getTime","processQueue","length","messageInfo","shift","handleExited","this","onExited","Component","TransitionLeft","props","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","Transition","TransitionComponent","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","Container","breakpoints","down","marginBottom","AppSnackbar","routeSegments","name","path","title","Box","py","ConsecutiveSnackbar"],"mappings":"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","file":"static/js/33.88ad29f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useTheme } from '@mui/system'\r\nimport { Button, Snackbar, IconButton } from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nexport default function SimpleSnackbar() {\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClick() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick}>Open simple snackbar</Button>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Note archived</span>}\r\n                action={[\r\n                    <Button\r\n                        key=\"undo\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}\r\n                        sx={{ padding: theme.spacing(0.5) }}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport { amber, green } from '@mui/material/colors'\r\nimport { Alert, Button, Snackbar } from '@mui/material'\r\n\r\nconst ContentRoot = styled('div')(({ theme }) => ({\r\n    '& .success': {\r\n        backgroundColor: green[600],\r\n    },\r\n    '& .error': {\r\n        backgroundColor: theme.palette.error.main,\r\n    },\r\n    '& .info': {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    '& .warning': {\r\n        backgroundColor: amber[700],\r\n    },\r\n    '& .icon': {\r\n        fontSize: 20,\r\n    },\r\n    '& .iconVariant': {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    '& .message': {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    '& .margin': {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function CustomizedSnackbars() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClick() {\r\n        setOpen(true)\r\n    }\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <ContentRoot>\r\n            <Button variant=\"outlined\" className=\"margin\" onClick={handleClick}>\r\n                Open success snackbar\r\n            </Button>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert\r\n                    onClose={handleClose}\r\n                    severity=\"success\"\r\n                    sx={{ width: '100%' }}\r\n                    variant=\"filled\"\r\n                >\r\n                    This is a success message!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Alert\r\n                onClose={handleClose}\r\n                sx={{ m: 1 }}\r\n                severity=\"error\"\r\n                variant=\"filled\"\r\n            >\r\n                This is an error message!\r\n            </Alert>\r\n            <Alert\r\n                onClose={handleClose}\r\n                sx={{ m: 1 }}\r\n                severity=\"warning\"\r\n                variant=\"filled\"\r\n            >\r\n                This is a warning message!\r\n            </Alert>\r\n            <Alert\r\n                onClose={handleClose}\r\n                sx={{ m: 1 }}\r\n                severity=\"info\"\r\n                variant=\"filled\"\r\n            >\r\n                This is an information message!\r\n            </Alert>\r\n            <Alert\r\n                onClose={handleClose}\r\n                sx={{ m: 1 }}\r\n                severity=\"success\"\r\n                variant=\"filled\"\r\n            >\r\n                This is a success message!\r\n            </Alert>\r\n        </ContentRoot>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Snackbar } from '@mui/material'\r\n\r\nexport default function PositionedSnackbar() {\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    })\r\n\r\n    const { vertical, horizontal, open } = state\r\n\r\n    const handleClick = (newState) => () => {\r\n        setState({ open: true, ...newState })\r\n    }\r\n\r\n    function handleClose() {\r\n        setState({ ...state, open: false })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'center' })}\r\n            >\r\n                Top-Center\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'right' })}\r\n            >\r\n                Top-Right\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                })}\r\n            >\r\n                Bottom-Right\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                })}\r\n            >\r\n                Bottom-Center\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                })}\r\n            >\r\n                Bottom-Left\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'left' })}\r\n            >\r\n                Top-Left\r\n            </Button>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={`${vertical},${horizontal}`}\r\n                open={open}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport { Button, SnackbarContent } from '@mui/material'\r\n\r\nconst action = (\r\n    <Button color=\"secondary\" size=\"small\">\r\n        lorem ipsum dolorem\r\n    </Button>\r\n)\r\n\r\nconst SnackbarRoot = styled('div')(({ theme }) => ({\r\n    maxWidth: 600,\r\n    '& .snackbar': {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function LongTextSnackbar() {\r\n    return (\r\n        <SnackbarRoot>\r\n            <SnackbarContent\r\n                className='snackbar'\r\n                message=\"I love snacks.\"\r\n                action={action}\r\n            />\r\n            <SnackbarContent\r\n                className='snackbar'\r\n                message={`I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.`}\r\n            />\r\n            <SnackbarContent\r\n                className='snackbar'\r\n                message=\"I love candy. I love cookies. I love cupcakes.\"\r\n                action={action}\r\n            />\r\n            <SnackbarContent\r\n                className='snackbar'\r\n                message={\r\n                    'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n                }\r\n                action={action}\r\n            />\r\n        </SnackbarRoot>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport { Button, Snackbar, IconButton } from '@mui/material'\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n    padding: theme.spacing(0.5)\r\n}))\r\n\r\nclass ConsecutiveSnackbars extends React.Component {\r\n    queue = []\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClick = (message) => () => {\r\n        this.queue.push({\r\n            message,\r\n            key: new Date().getTime(),\r\n        })\r\n\r\n        if (this.state.open) {\r\n            // immediately begin dismissing current message\r\n            // to start showing new one\r\n            this.setState({ open: false })\r\n        } else {\r\n            this.processQueue()\r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                messageInfo: this.queue.shift(),\r\n                open: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    handleExited = () => {\r\n        this.processQueue()\r\n    }\r\n\r\n    render() {\r\n        const { messageInfo = {} } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick('Message A')}>\r\n                    Show message A\r\n                </Button>\r\n                <Button onClick={this.handleClick('Message B')}>\r\n                    Show message B\r\n                </Button>\r\n                <Snackbar\r\n                    key={messageInfo.key}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleClose}\r\n                    onExited={this.handleExited}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n                    action={[\r\n                        <Button\r\n                            key=\"undo\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            UNDO\r\n                        </Button>,\r\n                        <StyledIconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            <CloseIcon />\r\n                        </StyledIconButton>,\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConsecutiveSnackbars\r\n","import React from 'react'\r\nimport { Slide, Button, Snackbar } from '@mui/material'\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n    return <Slide {...props} direction=\"up\" />\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n    return <Slide {...props} direction=\"right\" />\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n    return <Slide {...props} direction=\"down\" />\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClick = (Transition) => () => {\r\n        this.setState({ open: true, Transition })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick(TransitionLeft)}>\r\n                    Right\r\n                </Button>\r\n                <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\r\n                <Button onClick={this.handleClick(TransitionRight)}>\r\n                    Left\r\n                </Button>\r\n                <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    TransitionComponent={this.state.Transition}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">I love snacks</span>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DirectionSnackbar\r\n","import React from 'react'\r\nimport { Button } from '@mui/material'\r\nimport { SnackbarProvider, useSnackbar } from 'notistack'\r\n\r\nfunction StackedSnackbar() {\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const handleClick = () => {\r\n        enqueueSnackbar('I love snacks.')\r\n    }\r\n\r\n    const handleClickVariant = (variant) => () => {\r\n        // variant could be success, error, warning, info, or default\r\n        enqueueSnackbar('This is a warning message!', { variant })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={handleClick}>Show snackbar</Button>\r\n            <Button onClick={handleClickVariant('warning')}>\r\n                Show warning snackbar\r\n            </Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n    return (\r\n        <SnackbarProvider maxSnack={3}>\r\n            <StackedSnackbar />\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Grow, Fade, Slide, Button, Snackbar } from '@mui/material'\r\n\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"up\" />\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n    return <Grow {...props} />\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        Transition: Fade,\r\n    })\r\n\r\n    const handleClick = (Transition) => () => {\r\n        setState({\r\n            open: true,\r\n            Transition,\r\n        })\r\n    }\r\n\r\n    function handleClose() {\r\n        setState({\r\n            ...state,\r\n            open: false,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick(GrowTransition)}>\r\n                Grow Transition\r\n            </Button>\r\n            <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n            <Button onClick={handleClick(SlideTransition)}>\r\n                Slide Transition\r\n            </Button>\r\n            <Snackbar\r\n                open={state.open}\r\n                onClose={handleClose}\r\n                TransitionComponent={state.Transition}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport SimpleSnackbar from './SimpleSnackbar'\r\nimport CustomizedSnackbars from './CustomizedSnackbar'\r\nimport PositionedSnackbar from './PositionedSnackbar'\r\nimport LongTextSnackbar from './LongLengthSnackbar'\r\nimport ConsecutiveSnackbar from './ConsecutiveSnackbar'\r\nimport DirectionSnackbar from './DirectionSnackbar'\r\nimport IntegrationNotistack from './StackedSnackbar'\r\nimport TransitionsSnackbar from './TransitionSnackbar'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppSnackbar = () => {\r\n    return (\r\n        <Container>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Snackbar' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple snackbar\">\r\n                <SimpleSnackbar />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"customized snackbar\">\r\n                <CustomizedSnackbars />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"positioned snackbar\">\r\n                <PositionedSnackbar />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"message length\">\r\n                <LongTextSnackbar />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"transition\">\r\n                <TransitionsSnackbar />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"consecutive snackbar\">\r\n                <ConsecutiveSnackbar />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Control Slide direction\">\r\n                <DirectionSnackbar />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"complementary project\">\r\n                <IntegrationNotistack />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppSnackbar\r\n"],"sourceRoot":""}